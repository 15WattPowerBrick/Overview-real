generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Candidate {
  nric           String   @id @db.VarChar(9)
  name           String
  block          String
  building       String
  floor          String
  unit           String
  street         String
  postal         String   @db.VarChar(6)
  country        String
  bankHolderName String?
  bankName       String?
  bankNumber     String?
  dateOfBirth    DateTime?
  phoneNumber    String
  assigns        Assign[]
}

model Consultant {
  email        String           @id
  name         String
  contact      String
  status       EmploymentStatus
  designation  String
  registration String
  department   String
  assigns      Assign[]
  manages      Manage[]
}

model Client {
  id       String    @id @default(cuid())
  name     String
  projects Project[]
}

model Project {
  id        String   @id @default(cuid())
  name      String
  clientId  String
  locations Json
  assigns   Assign[]
  manages   Manage[]
  client    Client   @relation(fields: [clientId], references: [id])
  shifts    Shift[]
}

model Shift {
  id          String    @id @default(cuid())
  headcount   Int
  day         DayOfWeek
  endTime     DateTime
  projectId   String
  shiftNumber Int
  startTime   DateTime
  project     Project   @relation(fields: [projectId], references: [id])
}

model Attendance {
  id            String           @id @default(cuid())
  candidateNric String           @db.VarChar(9)
  shiftId       String
  clockInTime   DateTime
  clockOutTime  DateTime
  status        AttendanceStatus
}

model Manage {
  role            Role
  consultantEmail String
  projectId       String
  consultant      Consultant @relation(fields: [consultantEmail], references: [email])
  project         Project    @relation(fields: [projectId], references: [id])

  @@id([consultantEmail, projectId])
}

model Assign {
  candidateNric   String     @db.VarChar(9)
  consultantEmail String
  projectId       String
  candidate       Candidate  @relation(fields: [candidateNric], references: [nric])
  consultant      Consultant @relation(fields: [consultantEmail], references: [email])
  project         Project    @relation(fields: [projectId], references: [id])

  @@id([consultantEmail, projectId, candidateNric])
}

model Sessions {
  sid    String   @id(map: "session_pkey") @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model Users {
  username String @id
  hash     String
}

enum EmploymentStatus {
  ACTIVE
  TERMINATED
}

enum Role {
  CLIENT_HOLDER
  CANDIDATE_HOLDER
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum AttendanceStatus {
  PRESENT
  NO_SHOW
  MC
  FULL_DAY_LEAVE
  HALF_DAY_LEAVE
}
