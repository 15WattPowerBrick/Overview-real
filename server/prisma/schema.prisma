generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Candidate {
  nric           String   @id @db.VarChar(9)
  name           String
  dateOfBirth    DateTime
  phoneNumber    String
  block          String // address fields follow SingPass API
  building       String
  floor          String
  unit           String
  street         String
  postal         String   @db.VarChar(6)
  country        String
  bankName       String?
  bankNumber     String?
  bankHolderName String?

  assigns Assign[]
}

model Consultant {
  email        String           @id
  name         String
  contact      String
  status       EmploymentStatus
  designation  String
  registration String
  department   String

  manages Manage[]
  assigns Assign[]
}

model Client {
  id       String    @id @default(cuid())
  name     String
  projects Project[]
}

model Project {
  id        String @id @default(cuid())
  name      String
  clientId  String
  client    Client @relation(fields: [clientId], references: [id])
  locations Json

  shifts  Shift[]
  manages Manage[]
  assigns Assign[]
}

model Shift {
  id          String    @id @default(cuid())
  projectId   String
  shiftNumber Int
  project     Project   @relation(fields: [projectId], references: [id])
  headcount   Int
  day         DayOfWeek
  startTime   DateTime
  endTime     DateTime
}

model Attendance {
  id            String           @id @default(cuid())
  candidateNric String           @db.VarChar(9)
  shiftId       String
  clockInTime   DateTime
  clockOutTime  DateTime
  status        AttendanceStatus
}

model Manage {
  consultantEmail String
  projectId       String
  role            Role

  consultant Consultant @relation(fields: [consultantEmail], references: [email])
  project    Project    @relation(fields: [projectId], references: [id])

  @@id([consultantEmail, projectId])
}

model Assign {
  candidateNric   String @db.VarChar(9)
  consultantEmail String
  projectId       String

  consultant Consultant @relation(fields: [consultantEmail], references: [email])
  project    Project    @relation(fields: [projectId], references: [id])
  candidate  Candidate  @relation(fields: [candidateNric], references: [nric])

  @@id([consultantEmail, projectId, candidateNric])
}

enum EmploymentStatus {
  ACTIVE
  TERMINATED
}

enum Role {
  CLIENT_HOLDER
  CANDIDATE_HOLDER
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum AttendanceStatus {
  PRESENT
  NO_SHOW
  MC
  FULL_DAY_LEAVE
  HALF_DAY_LEAVE
}
