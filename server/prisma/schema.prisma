generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Assign {
  candidateCuid  String
  consultantCuid String
  projectCuid    String
  startDate      DateTime
  endDate        DateTime
  Requests       Request[]
  Candidate      Candidate  @relation(fields: [candidateCuid], references: [cuid])
  Consultant     Consultant @relation(fields: [consultantCuid], references: [cuid])
  Project        Project    @relation(fields: [projectCuid], references: [cuid])

  @@id([projectCuid, candidateCuid])
}

model Request {
  cuid          String        @id @default(cuid())
  candidateCuid String
  projectCuid   String
  data          Json
  type          RequestType
  Assign        Assign        @relation(fields: [projectCuid, candidateCuid], references: [projectCuid, candidateCuid])
  status        RequestStatus @default(PENDING)
}

enum RequestType {
  CLAIM
  PAID_LEAVE
  UNPAID_LEAVE
  RESIGNATION
  CANCEL
}

model Attendance {
  cuid          String            @id @default(cuid())
  candidateCuid String
  shiftCuid     String
  clockInTime   DateTime?
  clockOutTime  DateTime?
  status        AttendanceStatus?
  leave         LeaveStatus?
  shiftDate     DateTime          @db.Date
  Candidate     Candidate         @relation(fields: [candidateCuid], references: [cuid])
  Shift         Shift             @relation(fields: [shiftCuid], references: [cuid])

  @@unique([candidateCuid, shiftCuid, shiftDate])
}

model Candidate {
  cuid             String       @id @default(cuid())
  nric             String       @unique @db.VarChar(9)
  contact          String       @unique
  name             String
  dateOfBirth      DateTime     @db.Date
  hasOnboarded     Boolean      @default(false)
  nationality      String?
  bankDetails      Json?
  address          Json?
  emergencyContact Json?
  Assign           Assign[]
  Attendance       Attendance[]
  User             User?
}

model Client {
  uen     String    @id
  name    String    @unique
  Project Project[]
}

model Consultant {
  cuid         String           @id @default(cuid())
  email        String           @unique
  name         String
  status       EmploymentStatus @default(ACTIVE)
  contact      String?          @unique
  designation  String
  registration String?          @unique
  department   String?
  permissions  Json             @default("{}")
  Assign       Assign[]
  Manage       Manage[]
}

model Manage {
  role           Role       @default(CLIENT_HOLDER)
  consultantCuid String
  projectCuid    String
  Consultant     Consultant @relation(fields: [consultantCuid], references: [cuid])
  Project        Project    @relation(fields: [projectCuid], references: [cuid])

  @@id([consultantCuid, projectCuid])
}

model Project {
  cuid                 String           @id @default(cuid())
  name                 String
  clientUEN            String
  employmentBy         String
  locations            Json             @default("[]")
  createdAt            DateTime         @default(now())
  endDate              DateTime         @db.Date
  startDate            DateTime         @db.Date
  noticePeriodDuration Int
  noticePeriodUnit     NoticePeriodUnit
  status               ProjectStatus    @default(ACTIVE)
  Assign               Assign[]
  Manage               Manage[]
  Client               Client           @relation(fields: [clientUEN], references: [uen])
  ShiftGroup           ShiftGroup[]
}

model Session {
  sid    String   @id(map: "session_pkey") @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model Shift {
  cuid       String       @id @default(cuid())
  groupCuid  String
  day        DayOfWeek
  startTime  DateTime     @db.Time(6)
  endTime    DateTime     @db.Time(6)
  Attendance Attendance[]
  ShiftGroup ShiftGroup   @relation(fields: [groupCuid], references: [cuid])

  @@unique([groupCuid, day, startTime, endTime])
}

model ShiftGroup {
  cuid        String      @id @default(cuid())
  projectCuid String
  name        String
  headcount   Int
  shiftStatus ShiftStatus @default(ACTIVE)
  Shift       Shift[]
  Project     Project     @relation(fields: [projectCuid], references: [cuid])

  @@unique([projectCuid, name])
}

model User {
  cuid      String    @id @default(cuid())
  username  String    @unique
  hash      String
  Candidate Candidate @relation(fields: [cuid], references: [cuid])
}

enum AttendanceStatus {
  PRESENT
  NO_SHOW
  MEDICAL
}

enum LeaveStatus {
  FULLDAY
  HALFDAY
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum EmploymentStatus {
  ACTIVE
  TERMINATED
}

enum ShiftStatus {
  ACTIVE
  ARCHIVED
}

enum ProjectStatus {
  ACTIVE
  EXPIRED
  DELETED
}

enum Role {
  CLIENT_HOLDER
  CANDIDATE_HOLDER
}

enum NoticePeriodUnit {
  DAY
  WEEK
  MONTH
}

enum RequestStatus {
  APPROVED
  REJECTED
  PENDING
  CANCELLED
}
